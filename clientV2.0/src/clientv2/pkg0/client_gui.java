/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientv2.pkg0;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Gavin Daly
 */
public class client_gui extends javax.swing.JFrame {

    /**
     * Creates new form client_gui
     */
   public static Socket clientSock;
    public client_gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TaChat = new javax.swing.JTextArea();
        tfSend = new javax.swing.JTextField();
        BtnSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TaChat.setColumns(20);
        TaChat.setRows(5);
        jScrollPane1.setViewportView(TaChat);

        tfSend.setText("type text  here");
        tfSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSendActionPerformed(evt);
            }
        });

        BtnSend.setText("Send");
        BtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(tfSend, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(BtnSend)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSend))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSendActionPerformed

    private void BtnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSendActionPerformed
        try{
            //BufferedReader keyRead = new BufferedReader(new InputStreamReader(System.in));
            OutputStream ostream = client_gui.clientSock.getOutputStream();
            String sendMessage;
            String formattedtext;
            //sending message to client (pwrite object)
            PrintWriter pwrite=new PrintWriter(ostream,true);
            //sendMessage=keyRead.readLine();//keyboard reading
            sendMessage = tfSend.getText();
            String adress = String.valueOf(JOptionPane.showInputDialog(null,"Who do u want to send the message to"));
            formattedtext="T#"+adress+"#"+sendMessage;
            pwrite.println(formattedtext);//sending to server
             client_gui.TaChat.append("me:>"+sendMessage+"\n");
            System.out.flush();
        }catch(IOException e){

        }    
         
        
    }//GEN-LAST:event_BtnSendActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            clientSock = new Socket("169.1.39.136", 16000);
        } catch (IOException ex) {
            Logger.getLogger(client_gui.class.getName()).log(Level.SEVERE, null, ex);
        }
        TaChat.append("Client connected to server\n");
        
        new listenings();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client_gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSend;
    public static javax.swing.JTextArea TaChat;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField tfSend;
    // End of variables declaration//GEN-END:variables
}

class listenings implements Runnable{
Thread runner;


    listenings(){
         if(runner == null){
            runner = new Thread(this);
            runner.start();
    }
    }
     
    public void run(){
        try{
    
        // Communication stream assosiated with socket
       
        InputStream istream=client_gui.clientSock.getInputStream();
        //receiving from server(receiveRead object)
        BufferedReader receiveRead=new BufferedReader(new InputStreamReader(istream));
        System.out.println("to Start the chat, type message and press Enter key");
        client_gui.TaChat.append("to Start the chat, type message and press Enter key\n");
         
        String receiveMessage ;    
         while(true)
        {
           
            
            if((receiveMessage=receiveRead.readLine())!=null)//receive from server
            {
                System.out.println("server:>"+receiveMessage);//displaying message
                client_gui.TaChat.append("server:>"+receiveMessage+"\n");
            }
           
        }
          }catch(Exception e){
            
        }  
     

}
    
}
